{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["url","postData","a","data","fetch","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","response","json","text_truncate","str","length","ending","substring","useStylesRoot","makeStyles","theme","root","flexGrow","container","marginTop","spacing","marginLeft","marginRight","highlights","marginBottom","progress","display","highlight","useStyles","grow","menuButton","title","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","setArticles","setHighlights","setProgress","classes","React","useEffect","input","document","getElementById","q","queryString","parse","window","location","value","addEventListener","event","keyCode","preventDefault","val","query","history","pushState","newurl","protocol","host","pathname","path","then","console","log","results","Articles","Highlights","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","id","placeholder","inputProps","useStylesCard","minWidth","bullet","margin","transform","fontSize","pos","SimpleCard","article","Card","CardContent","gutterBottom","Authors","href","Reference","component","Title","Published","Publication","Relevant","map","rel","App","useState","articles","CircularProgress","Grid","item","xs","md","hl","key","Id","card","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.843fe7c6.chunk.js","sourcesContent":["import React from 'react';\nimport queryString from 'query-string'\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\n\nconst url = \"https://55908ca9.ngrok.iohttps://c8885a58\"\n\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *client\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return await response.json(); // parses JSON response into native JavaScript objects\n}\n\nconst text_truncate = function(str, length, ending) {\n    if (length == null) {\n      length = 100;\n    }\n    if (ending == null) {\n      ending = '...';\n    }\n    if (str.length > length) {\n      return str.substring(0, length - ending.length) + ending;\n    } else {\n      return str;\n    }\n  };\n\nconst useStylesRoot = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  container: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  highlights: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  progress: {\n    display: 'block',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: theme.spacing(2)\n  },\n  highlight: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction App() {\n  const classes = useStylesRoot();\n  const [progress, setProgress] = React.useState(false)\n  const [articles, setArticles] = React.useState([])\n  const [highlights, setHighlights] = React.useState([])\n\n  React.useEffect(() => {\n    var q = queryString.parse(window.location.search);\n    if (q.search) {\n      setProgress(true)\n      postData(url, JSON.stringify(q.search))\n        .then((data) => {\n          setProgress(false)\n          console.log(data); // JSON data parsed by `response.json()` call\n          setArticles(data.results.results.Articles)\n          setHighlights(data.results.results.Highlights)\n        });\n    }\n  }, [])\n  return (\n    <div>\n      <PrimarySearchAppBar setArticles={setArticles} setHighlights={setHighlights} setProgress={setProgress} />\n      {\n        progress\n          ? <CircularProgress className={classes.progress} />\n          : (\n            <>\n              {\n                highlights && highlights.length > 0 && (\n                  <Grid container className={classes.root} spacing={2}>\n                    <Grid item xs={12} md={8}>\n                      <div className={classes.container}>\n                      <Card className={classes.root} variant=\"outlined\">\n                        <CardContent>\n                          <div className={classes.highlights}>\n                            <Typography variant=\"h6\" component=\"h2\">\n                              Highlights\n                            </Typography>\n                            <ul>\n                            {\n                              highlights && highlights.map(hl => (\n                                <li>\n                                  <Typography className={classes.highlight} variant=\"body2\" component=\"p\">\n                                    {hl}\n                                  </Typography>\n                                </li>\n                              ))\n                            }\n                            </ul>\n                          </div>\n                        </CardContent>\n                      </Card>\n                      </div>\n                    </Grid>\n                  </Grid>\n                )\n              }\n              <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12} md={8}>\n                  {\n                    articles && articles.map(article => (\n                      <div key={article.Id} className={classes.container}>\n                        <SimpleCard className={classes.card} article={article} />\n                      </div>\n                    ))\n                  }\n                </Grid>\n              </Grid>\n            </>\n          )\n      }\n    </div>\n  );\n}\n\n\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nfunction PrimarySearchAppBar({setArticles, setHighlights, setProgress}) {\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    var input = document.getElementById(\"myInput\");\n    var q = queryString.parse(window.location.search);\n    if (q.search) {\n      input.value = q.search\n    }\n    input.addEventListener(\"keyup\", function(event) {\n    // Number 13 is the \"Enter\" key on the keyboard\n    if (event.keyCode === 13) {\n      // Cancel the default action, if needed\n      event.preventDefault();\n      // Trigger the button element with a click\n      // document.getElementById(\"myBtn\").click();\n      // const res = getRes(input.value)\n\n      setProgress(true)\n      const val = input.value\n      var q = queryString.parse(window.location.search);\n      // set the `row` property\n      q.search = val;\n      // convert the object to a query string\n      // and overwrite the existing query string\n      const query = queryString.stringify(q);\n\n      if (window.history.pushState) {\n          var newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + query;\n          window.history.pushState({path:newurl},'',newurl);\n      }\n      postData(url, JSON.stringify(val))\n        .then((data) => {\n          setProgress(false)\n          console.log(data); // JSON data parsed by `response.json()` call\n          setArticles(data.results.results.Articles)\n          setHighlights(data.results.results.Highlights)\n        });\n    }\n  });\n  }, [])\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Google for COVID-19\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              id=\"myInput\"\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nconst useStylesCard = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction SimpleCard({article}) {\n  const classes = useStylesCard();\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {text_truncate(article.Authors, 60)}\n        </Typography>\n        <a href={article.Reference}>\n          <Typography variant=\"h6\" component=\"h2\">\n            {text_truncate(article.Title)}\n          </Typography>\n        </a>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {article.Published}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {article.Publication}\n        </Typography>\n        {\n          article.Relevant && article.Relevant.length > 0 &&\n            <div>\n              <br />\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Relevant\n              </Typography>\n              <ul>\n                {\n                  article.Relevant.map(rel => (\n                    <li>{rel}</li>\n                  ))\n                }\n              </ul>\n            </div>\n        }\n      </CardContent>\n    </Card>\n  );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}